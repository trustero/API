// This file is subject to the terms and conditions defined in
// file 'LICENSE.txt', which is part of this source code package.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: receptor_v1/finding.proto

package receptor_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//*
//A finding is a set of evidence(s) collected from a service provider account.
type Finding struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//*
	//Unique receptor identifier.  A receptor is expected to report findings from only one service provider type.  A
	//stable identifier that represent the type of receptor reporting this finding.  The identifier is akin to a fully
	//qualified Go package name or a Java class name.  For example, "github.com/trustero/receptor/gitlab".
	//REMIND maps to Receptor.ModelID
	ReceptorType string `protobuf:"bytes,1,opt,name=receptor_type,json=receptorType,proto3" json:"receptor_type,omitempty"`
	//*
	//The receptor's evidence source.
	//REMIND maps to Receptor.TenantID
	ServiceProviderAccount string `protobuf:"bytes,2,opt,name=service_provider_account,json=serviceProviderAccount,proto3" json:"service_provider_account,omitempty"`
	//*
	//One or more evidence collected by a typical receptor scan.
	Evidences []*Evidence `protobuf:"bytes,3,rep,name=evidences,proto3" json:"evidences,omitempty"`
}

func (x *Finding) Reset() {
	*x = Finding{}
	if protoimpl.UnsafeEnabled {
		mi := &file_receptor_v1_finding_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_receptor_v1_finding_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_receptor_v1_finding_proto_rawDescGZIP(), []int{0}
}

func (x *Finding) GetReceptorType() string {
	if x != nil {
		return x.ReceptorType
	}
	return ""
}

func (x *Finding) GetServiceProviderAccount() string {
	if x != nil {
		return x.ServiceProviderAccount
	}
	return ""
}

func (x *Finding) GetEvidences() []*Evidence {
	if x != nil {
		return x.Evidences
	}
	return nil
}

var File_receptor_v1_finding_proto protoreflect.FileDescriptor

var file_receptor_v1_finding_proto_rawDesc = []byte{
	0x0a, 0x19, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x31, 0x2f, 0x66, 0x69,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x31, 0x1a, 0x1a, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74,
	0x6f, 0x72, 0x5f, 0x76, 0x31, 0x2f, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x33, 0x0a, 0x09, 0x65, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x31,
	0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x65, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x72, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x67, 0x6f, 0x2f, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_receptor_v1_finding_proto_rawDescOnce sync.Once
	file_receptor_v1_finding_proto_rawDescData = file_receptor_v1_finding_proto_rawDesc
)

func file_receptor_v1_finding_proto_rawDescGZIP() []byte {
	file_receptor_v1_finding_proto_rawDescOnce.Do(func() {
		file_receptor_v1_finding_proto_rawDescData = protoimpl.X.CompressGZIP(file_receptor_v1_finding_proto_rawDescData)
	})
	return file_receptor_v1_finding_proto_rawDescData
}

var file_receptor_v1_finding_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_receptor_v1_finding_proto_goTypes = []interface{}{
	(*Finding)(nil),  // 0: receptor_v1.Finding
	(*Evidence)(nil), // 1: receptor_v1.Evidence
}
var file_receptor_v1_finding_proto_depIdxs = []int32{
	1, // 0: receptor_v1.Finding.evidences:type_name -> receptor_v1.Evidence
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_receptor_v1_finding_proto_init() }
func file_receptor_v1_finding_proto_init() {
	if File_receptor_v1_finding_proto != nil {
		return
	}
	file_receptor_v1_evidence_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_receptor_v1_finding_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Finding); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_receptor_v1_finding_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_receptor_v1_finding_proto_goTypes,
		DependencyIndexes: file_receptor_v1_finding_proto_depIdxs,
		MessageInfos:      file_receptor_v1_finding_proto_msgTypes,
	}.Build()
	File_receptor_v1_finding_proto = out.File
	file_receptor_v1_finding_proto_rawDesc = nil
	file_receptor_v1_finding_proto_goTypes = nil
	file_receptor_v1_finding_proto_depIdxs = nil
}
